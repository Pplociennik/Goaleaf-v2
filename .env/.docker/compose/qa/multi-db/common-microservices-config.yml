services:

  # Keycloak

  keycloak:
    image: "quay.io/keycloak/keycloak:latest"
    container_name: glf-keycloak
    ports:
      - "7080:8080"
      - "9000:9000"
    environment:
      KC_BOOTSTRAP_ADMIN_USERNAME: ${KC_BOOTSTRAP_ADMIN_USERNAME}
      KC_BOOTSTRAP_ADMIN_PASSWORD: ${KC_BOOTSTRAP_ADMIN_PASSWORD}
      KC_METRICS_ENABLED: ${KC_METRICS_ENABLED}
      KC_HEALTH_ENABLED: ${KC_HEALTH_ENABLED}
      KC_DB: ${KC_DB}
      KC_DB_URL: ${KC_DB_URL}
      KC_DB_USERNAME: ${KC_DB_USERNAME}
      KC_DB_PASSWORD: ${KC_DB_PASSWORD}
      KC_HOSTNAME: ${KC_HOSTNAME}
    command:
      - start-dev
      - --import-realm
    volumes:
      - ./volumes/keycloak:/opt/keycloak/data/import
    healthcheck:
      test: [ "CMD-SHELL", "exec 3<>/dev/tcp/127.0.0.1/9000; echo -e 'GET /health/ready HTTP/1.1\r\nHost: localhost:9000\r\nConnection: close\r\n\r\n' >&3;cat <&3 | grep -q '\"status\": \"UP\"' && exit 0 || exit 1" ]
      interval: 10s
      timeout: 5s
      retries: 100
      start_period: 30s
    depends_on:
      keycloakdb:
        condition: service_healthy
    extends:
      file: common-config.yml
      service: network-deploy-service

  # Api Gateway

  api-gateway:
    image: "com.goaleaf/glf-api-gateway:${API_GATEWAY_VERSION}"
    container_name: glf-api-gateway
    build:
      context: ..
      dockerfile: Dockerfile
    ports:
      - "8072:8072"
    environment:
      SPRING_PROFILES_ACTIVE: ${SPRING_PROFILES_ACTIVE}
      SPRING_APPLICATION_NAME: "api-gateway"
      OTEL_SERVICE_NAME: "api-gateway"
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: ${EUREKA_CLIENT_SERVICEURL_DEFAULTZONE}
      SPRING_SECURITY_OAUTH2_RESOURCESERVER_JWT_JWK-SET-URI: ${SPRING_SECURITY_OAUTH2_RESOURCESERVER_JWT_JWK-SET-URI}
    depends_on:
      servicediscovery:
        condition: service_healthy
    extends:
      file: common-config.yml
      service: microservice-configserver-config

  # Service Discovery

  servicediscovery:
    image: "com.goaleaf/glf-servicediscovery:${SERVICE_DISCOVERY_VERSION}"
    container_name: glf-servicediscovery
    ports:
      - "8070:8070"
    depends_on:
      configserver:
        condition: service_healthy
    healthcheck:
      test: "curl --fail --silent localhost:8070/actuator/health/readinessState | grep UP || exit 1"
      interval: 20s
      timeout: 5s
      retries: 20
      start_period: 10s
    extends:
      file: common-config.yml
      service: microservice-configserver-config
    environment:
      SPRING_PROFILES_ACTIVE: ${SPRING_PROFILES_ACTIVE}
      SPRING_APPLICATION_NAME: "servicediscovery"
      OTEL_SERVICE_NAME: "servicediscovery"
      JAVA_TOOL_OPTIONS: "-javaagent:/app/libs/opentelemetry-javaagent-2.12.0.jar"

  # Config Server

  configserver:
    image: "com.goaleaf/glf-configserver:${CONFIG_SERVER_VERSION}"
    hostname: glf-configserver
    ports:
      - "8071:8071"
    environment:
      SPRING_PROFILES_ACTIVE: "qa"
      SPRING_APPLICATION_NAME: "configserver"
      OTEL_SERVICE_NAME: "configserver"
      JAVA_TOOL_OPTIONS: "-javaagent:/app/libs/opentelemetry-javaagent-2.12.0.jar"
      SPRING_CLOUD_CONFIG_SERVER_GIT_URI: ${GIT_URI}
      SPRING_CLOUD_CONFIG_SERVER_GIT_USERNAME: ${GIT_USERNAME}
      SPRING_CLOUD_CONFIG_SERVER_GIT_PASSWORD: ${GIT_PASSWORD}
    healthcheck:
      test: "curl --fail --silent localhost:8071/actuator/health/readinessState | grep UP || exit 1"
      interval: 20s
      timeout: 5s
      retries: 20
      start_period: 10s
    depends_on:
      keycloak:
        condition: service_healthy
    extends:
      file: common-config.yml
      service: microservice-base-config